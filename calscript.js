// ====== calscript.js (‡∏´‡∏±‡∏ß‡πÑ‡∏ü‡∏•‡πå ‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏´‡∏°‡πà) ======
import { initializeApp } from "https://www.gstatic.com/firebasejs/9.22.2/firebase-app.js";
import {
  getAuth, onAuthStateChanged,
  signInWithEmailAndPassword, signOut
} from "https://www.gstatic.com/firebasejs/9.22.2/firebase-auth.js";
import {
  getDatabase, ref, get
} from "https://www.gstatic.com/firebasejs/9.22.2/firebase-database.js";

// ----- ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å config.js -----
const firebaseConfig = window.FIREBASE_CONFIG;
const REQUIRE_ROLE   = window.REQUIRE_ROLE ?? true;
const ALLOWED_ROLES  = Array.isArray(window.ALLOWED_ROLES) ? window.ALLOWED_ROLES : [];

const SHEET_ID = window.SHEET_ID;
const CALENDAR_SHEET = window.CALENDAR_SHEET;
const NAMES_SHEET = window.NAMES_SHEET;
const SpecialHolidays_SHEET = window.SpecialHolidays_SHEET;

// ----- DOM refs (‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤) -----
const loginOverlay = document.getElementById("loginOverlay");
const appRoot      = document.getElementById("app");

const monthSel = document.getElementById("month");
const yearSel  = document.getElementById("year");
const overlay  = document.getElementById("overlay");
const popup    = document.getElementById("popupForm");

const popupName     = document.getElementById("popupName");
const popupDate     = document.getElementById("popupDate");
const popupType     = document.getElementById("popupType");
const popupTime     = document.getElementById("popupTime");
const popupDetail   = document.getElementById("popupDetail");
const popupCustomer = document.getElementById("popupCustomer");
const popupPlace    = document.getElementById("popupPlace");
const popupJobowner = document.getElementById("popupJobowner");
const popupCharge   = document.getElementById("popupCharge");

// ----- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏° -----
let names = [], allData = [], specialHolidays = [];
let activeCell = null;

// ===== Firebase Init =====
if (!firebaseConfig || !firebaseConfig.apiKey) {
  console.error("üî• ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ FIREBASE_CONFIG ‡πÉ‡∏ô config.js");
  alert("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firebase (config.js)");
}

const app  = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db   = getDatabase(app);

// ===== UI Helper ‡πÄ‡∏î‡∏¥‡∏° =====
function showLogin() {
  loginOverlay.style.display = "block";
  appRoot.style.display = "none";
}
function showApp() {
  loginOverlay.style.display = "none";
  appRoot.style.display = "block";
}

// ===== Auth Gate =====
async function fetchUserRole(uid) {
  try {
    const snap = await get(ref(db, `users/${uid}/role`));
    return snap.exists() ? snap.val() : null;
  } catch (e) {
    console.error("get role error:", e);
    return null;
  }
}

onAuthStateChanged(auth, async (user) => {
  if (!user) {
    // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    showLogin();
    return;
  }

  // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏ï‡∏£‡∏ß‡∏à role (‡∏ñ‡πâ‡∏≤‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)
  if (REQUIRE_ROLE) {
    const role = await fetchUserRole(user.uid);
    if (!role) {
      alert("‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡∏û‡∏ö role)");
      await signOut(auth);
      showLogin();
      return;
    }
    if (ALLOWED_ROLES.length > 0 && !ALLOWED_ROLES.includes(role)) {
      alert(`‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (role = ${role})`);
      await signOut(auth);
      showLogin();
      return;
    }
    // ‡πÄ‡∏Å‡πá‡∏ö role ‡πÑ‡∏ß‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ä‡πâ
    window.CURRENT_ROLE = role;
  }

  // ‡∏ú‡πà‡∏≤‡∏ô gate ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏≠‡∏õ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  window.CURRENT_UID = user.uid;
  showApp();
  init(); // ‚Üê ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•/‡πÄ‡∏£‡∏ô‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏£‡∏≤‡∏á
});

// ===== ‡∏õ‡∏∏‡πà‡∏° Login / Logout =====
async function doLogin() {
  const email = document.getElementById('loginUser').value.trim();
  const pass  = document.getElementById('loginPass').value;
  if (!email || !pass) {
    alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô');
    return;
  }
  try {
    await signInWithEmailAndPassword(auth, email, pass);
    // onAuthStateChanged ‡∏à‡∏∞‡πÇ‡∏ä‡∏ß‡πå‡πÅ‡∏≠‡∏õ+init ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á
  } catch (e) {
    console.error(e);
    alert(e?.message || '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
  }
}

async function logout() {
  try {
    await signOut(auth);
    showLogin();
  } catch (e) {
    console.error(e);
    alert('‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
  }
}

function resetLogin() {
  document.getElementById('loginUser').value = '';
  document.getElementById('loginPass').value = '';
  document.getElementById('loginUser').focus();
}

// ====== (‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ) ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô calendar ‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢ ======
// - init()
// - renderTable(), cellClick(), openPopup(), closePopup(), saveData(), deleteData()
// - showDetails(), closeDetails(), openEditFromDetail()
// - openHolidayModal(), closeHoliday(), saveHoliday(), deleteHoliday()
// - exportMonthToCSV()
// - wheel scroll handler ‡∏Ø‡∏•‡∏Ø
// ---------- Calendar Core ----------
function init() {
  const now = new Date();
  const savedMonth = parseInt(localStorage.getItem('savedMonth'));
  const savedYear  = parseInt(localStorage.getItem('savedYear'));
  const defMonth = !isNaN(savedMonth) ? savedMonth : now.getMonth() + 1;
  const defYear  = !isNaN(savedYear)  ? savedYear  : now.getFullYear();

  // ‡πÄ‡∏ï‡∏¥‡∏° month/year
  monthSel.innerHTML = "";
  for (let i = 1; i <= 12; i++) {
    const opt = new Option(i, i);
    if (i === defMonth) opt.selected = true;
  headCells.forEach((th, idx) => {
    if (th.classList.contains('sun') || th.classList.contains('sat')) {
      weekendIdx.push({ index: idx + 1, cls: th.classList.contains('sat') ? 'sat' : 'sun' });
    }
  });
  table.querySelectorAll('tbody td.weekend').forEach(td => td.classList.remove('weekend', 'sat'));
  table.querySelectorAll('tbody tr').forEach(tr => {
    weekendIdx.forEach(({ index, cls }) => {
      const td = tr.querySelector(`td:nth-child(${index})`);
      if (td) { td.classList.add('weekend'); if (cls === 'sat') td.classList.add('sat'); }
    });
  });
}

function openHolidayModal(y, m, d) {
  const yy = (y != null ? y : +document.getElementById('year').value);
  const mm = (m != null ? m : +document.getElementById('month').value);
  const dd = (d != null ? d : 1);
  document.getElementById('holYear').value = yy;
  document.getElementById('holMonth').value = mm;
  document.getElementById('holDate').value = dd;
  document.getElementById('holDetail').value = '';
  overlay.classList.add('active');
  document.getElementById('holidayModal').classList.add('active');
}
function closeHoliday() {
  document.getElementById('holidayModal').classList.remove('active');
  overlay.classList.remove('active');
}
function saveHoliday() {
  const year = (document.getElementById('holYear').value || '').trim();
  const month = +document.getElementById('holMonth').value;
  const date  = +document.getElementById('holDate').value;
  const detail= document.getElementById('holDetail').value || '';
  if (!month || !date) { alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Month ‡πÅ‡∏•‡∏∞ Date'); return; }
  const form = document.getElementById('submitForm');
  form.year.value = year; form.month.value = month; form.date.value = date; form.name.value = '';
  form.type.value = ''; form.time.value = ''; form.datail.value = ''; form.customer.value = '';
  form.place.value = ''; form.jobowner.value = ''; form.charge.value = '';
  form.holidayDetail.value = detail; form.action.value = 'addHoliday';
  const iframe = document.getElementById('hidden_frame');
  closeHoliday();
  localStorage.setItem('savedMonth', monthSel.value);
  localStorage.setItem('savedYear', yearSel.value);
  iframe.onload = () => { iframe.onload = null; location.reload(); };
  setTimeout(() => { if (iframe.onload) { iframe.onload = null; location.reload(); } }, 6000);
  form.submit();
}
function deleteHoliday() {
  const year = (document.getElementById('holYear').value || '').trim();
  const month = +document.getElementById('holMonth').value;
  const date  = +document.getElementById('holDate').value;
  if (!month || !date) { alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Month ‡πÅ‡∏•‡∏∞ Date'); return; }
  const form = document.getElementById('submitForm');
  form.year.value = year; form.month.value = month; form.date.value = date; form.name.value = '';
  form.type.value = ''; form.time.value = ''; form.datail.value = ''; form.customer.value = '';
  form.place.value = ''; form.jobowner.value = ''; form.charge.value = '';
  form.holidayDetail.value = ''; form.action.value = 'removeHoliday';
  const iframe = document.getElementById('hidden_frame');
  closeHoliday();
  localStorage.setItem('savedMonth', monthSel.value);
  localStorage.setItem('savedYear', yearSel.value);
  iframe.onload = () => { iframe.onload = null; location.reload(); };
  setTimeout(() => { if (iframe.onload) { iframe.onload = null; location.reload(); } }, 6000);
  form.submit();
}

function exportMonthToCSV() {
  const year = +yearSel.value;
  const month = +monthSel.value;
  const filtered = allData.filter(row => +row.year === year && +row.month === month);
  if (filtered.length === 0) { alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ"); return; }
  const headers = ["Year","Month","Date","Name","Type","Time","Detail","Customer","Place","JobOwner","Charge"];
  const rows = [headers.join(",")];
  filtered.forEach(row => {
    const csvRow = [
      row.year, row.month, row.date, row.name, row.type, row.time,
      `"${row.datail?.replace(/"/g, '""') || ''}"`,
      `"${row.customer?.replace(/"/g, '""') || ''}"`,
      `"${row.place?.replace(/"/g, '""') || ''}"`,
      `"${row.jobowner?.replace(/"/g, '""') || ''}"`,
      row.charge
    ];
    rows.push(csvRow.join(","));
  });
  const BOM = "\uFEFF";
  const csvContent = BOM + rows.join("\n");
  const now = new Date();
  const tday = now.getDate();
  const hh = String(now.getHours()).padStart(2, '0');
  const mm = String(now.getMinutes()).padStart(2, '0');
  const timestamp = `${hh}-${mm}`;
  const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
  const url = URL.createObjectURL(blob);
  const link = document.createElement("a");
  link.setAttribute("href", url);
  link.setAttribute("download", `calendar-${year}-${month}-save-${tday}-${timestamp}.csv`);
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
}

// ‡∏™‡∏Å‡∏£‡∏≠‡∏•‡∏•‡πå‡∏•‡πâ‡∏≠‡πÄ‡∏°‡∏≤‡∏™‡πå (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)
document.querySelector('.calendar-wrapper').addEventListener('wheel', function(e) {
  e.preventDefault();
  const rowHeight = 80;
  const step = rowHeight * 2;
  this.scrollTop += (e.deltaY > 0 ? step : -step);
});

// ---------- Boot ----------
// (function boot() {
//   const currentUser = localStorage.getItem(AUTH_KEY);
//   if (currentUser) { showApp(); init(); }
//   else { showLogin(); }
// })();

// (‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç) ‡πÄ‡∏≠‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ localStorage ‡πÄ‡∏ä‡πá‡∏Ñ login ‡∏≠‡∏≠‡∏Å:
//   (function boot() { ... })  // ‚Üê ‡∏•‡∏ö‡∏ó‡∏¥‡πâ‡∏á
// ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ onAuthStateChanged ‡πÅ‡∏ó‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß

// ----- Expose to window (‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ auth/boot) -----
window.doLogin = doLogin;
window.resetLogin = resetLogin;
window.logout = logout;

// ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏≤‡∏£ expose ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏Ç‡∏≠‡∏á calendar ‡πÄ‡∏î‡∏¥‡∏°‡∏Ñ‡∏∏‡∏ì (renderTable/saveData/...) ‡πÉ‡∏´‡πâ‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ‡∏ï‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°
